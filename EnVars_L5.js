//GOAL: Calculate environmental variables (NDVI, EVI, brightness/greenness/wetness from tasseled cap)

//STEPS:
//Create cloud-less Landsat composite (using the same one as the classification uses)
//Calc tasseled cap values
//Add all the variables into one image as bands
//Reduce by class

//IMPORTS
var cuba = ee.FeatureCollection("users/mfstuhlmacher/Cuba/Tables/CUB_adm0"),
    l5 = ee.ImageCollection("LANDSAT/LT05/C01/T1"),
    geometry = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-82.73313481896166, 22.67016388805712],
          [-82.29642827599291, 22.632142950421365],
          [-81.84598882286791, 22.632142950421365],
          [-81.70041997521166, 22.502793141598918],
          [-81.93662602989916, 22.479954119523374],
          [-82.24149663536791, 22.444419263691834],
          [-82.20579106896166, 22.36824249543395],
          [-81.99155767052416, 22.10638557803756],
          [-81.76084477989916, 22.058028534358495],
          [-81.39280278771166, 21.95362279614714],
          [-81.14011724083666, 22.04275445066454],
          [-80.89292485802416, 22.009654947461893],
          [-80.50565679161791, 22.022386441046116],
          [-80.39579351036791, 21.917954465057523],
          [-80.14310796349291, 21.777742472835516],
          [-80.10465581505541, 21.698653383325897],
          [-80.02500493614916, 21.68844517076217],
          [-79.82725102989916, 21.622074168392572],
          [-79.77781255333666, 21.675683887806514],
          [-79.64597661583666, 21.59909248333582],
          [-79.48118169396166, 21.563335941457026],
          [-79.14335210411791, 21.50457390784874],
          [-78.83848149864916, 21.576107148166976],
          [-78.76981694786791, 21.479017785268294],
          [-78.70115239708666, 21.52501557299296],
          [-78.58854253380541, 21.3639597795912],
          [-78.53910405724291, 21.03362688626193],
          [-78.28641851036791, 20.856635308834903],
          [-78.17106206505541, 20.735956330190618],
          [-77.99802739708666, 20.653736784750777],
          [-77.87717778771166, 20.68457433671939],
          [-77.49540288536791, 20.63831566170526],
          [-77.34708745568041, 20.676865535791887],
          [-77.30314214318041, 20.63060451383648],
          [-77.28116948693041, 20.52260747083341],
          [-77.15482671349291, 20.491737152396045],
          [-77.17405278771166, 20.39394016464379],
          [-77.55582769005541, 20.19300469556872],
          [-77.83597905724291, 19.878201442426754],
          [-77.80302007286791, 19.79811028266285],
          [-77.48166997521166, 19.79811028266285],
          [-77.26743657677416, 19.867869369796],
          [-77.02848394005541, 19.842036243082628],
          [-76.65769536583666, 19.90661116797011],
          [-76.23746831505541, 19.9427616232698],
          [-75.80076177208666, 19.924687429099283],
          [-75.59751470177416, 19.839452699133293],
          [-75.01798589318041, 19.86270308096729],
          [-74.82572515099291, 19.999552759770367],
          [-74.20774419396166, 20.043422794963632],
          [-74.08689458458666, 20.223934789279106],
          [-74.16105229943041, 20.345018368222714],
          [-74.40549810021166, 20.350168761174466],
          [-74.64445073693041, 20.617751732475384],
          [-74.90537602989916, 20.705129224496805],
          [-75.41074712364916, 20.77704937074117],
          [-75.58103520958666, 20.8822992185182],
          [-75.55082280724291, 21.051570845119603],
          [-75.67716558068041, 21.136134638133314],
          [-75.81998784630541, 21.179678994383632],
          [-76.01774175255541, 21.12844901091011],
          [-76.37754399864916, 21.317911228725755],
          [-76.75107915489916, 21.417664795743846],
          [-77.35807378380541, 21.81344584487761],
          [-77.42812778387872, 21.83383141387395],
          [-77.47686345665697, 21.85997437228175],
          [-77.51154517470907, 21.89851638561499],
          [-77.61213262169603, 21.967632907258917],
          [-77.59911231587357, 21.96763133554089],
          [-77.60251958458666, 21.98164163664926],
          [-77.60801274864916, 22.050391698672264],
          [-77.62723882286791, 22.075846213516922],
          [-77.63547856896166, 22.10384088337622],
          [-77.70697400561667, 22.17122386421806],
          [-77.77555425255541, 22.264066826818887],
          [-77.87992436974291, 22.355542310041642],
          [-78.03257584206617, 22.401207767559097],
          [-78.12463436514159, 22.5002663526935],
          [-78.2649534980342, 22.480104874943006],
          [-78.34793961600016, 22.576896176331594],
          [-78.4921144264836, 22.557292973622662],
          [-78.67643315880541, 22.63467800709802],
          [-78.92911870568041, 22.67269824278218],
          [-79.03078180223487, 22.687853455973208],
          [-79.14060552208666, 22.660026000943397],
          [-79.20516472439351, 22.660017312058397],
          [-79.27793462364916, 22.622002256115813],
          [-79.30814702599291, 22.649887364884634],
          [-79.40977056114916, 22.728442191615958],
          [-79.471583178746, 22.804405453061065],
          [-79.74485356896166, 22.963835648935248],
          [-80.23374517052416, 23.183672159247774],
          [-80.37107427208666, 23.08264253034513],
          [-80.61277349083666, 23.16599747020072],
          [-80.70341069786791, 23.13821824506279],
          [-80.80503423302416, 23.173572622730887],
          [-81.03300054161791, 23.13569257542814],
          [-81.11265142052416, 23.234158401358265],
          [-81.44773442833666, 23.13821824506279],
          [-81.72788579552416, 23.20134451357712],
          [-82.30192144005541, 23.203868944954916],
          [-82.59580571739916, 23.072535384374067],
          [-83.23575933068041, 23.02198826669856],
          [-83.54337651818041, 22.90565801090132],
          [-84.02952153771166, 22.75123999152375],
          [-84.16685063927416, 22.62707269678016],
          [-84.39756352989916, 22.40887530182559],
          [-84.47996099083666, 22.177618375491313],
          [-84.41129644005541, 22.07839141286546],
          [-84.94413335411791, 21.95362279614714],
          [-85.00181157677416, 21.8414922495453],
          [-84.82603032677416, 21.770090593139624],
          [-84.70243413536791, 21.856787969969645],
          [-84.52390630333666, 21.897568548522024],
          [-84.55137212364916, 21.754785609445992],
          [-84.49369390099291, 21.70886087221563],
          [-84.23002202599291, 21.86443521608385],
          [-83.96909673302416, 21.887374496663178],
          [-83.91416509239916, 22.136918332121866],
          [-83.35660894005541, 22.159813555231853],
          [-83.25773198693041, 22.302188893592767],
          [-83.14374883263353, 22.275504538134275],
          [-83.05860478966478, 22.4698022334198],
          [-82.82789189903978, 22.5738237483007]]]);

//---- Change inputs based on year ----//
//cb is the imported shapefile generated from .py code
var cb = ee.FeatureCollection("users/mfstuhlmacher/Cuba/ClassBoundaries/Cuba1985_500m"); //1985
//cb = ee.FeatureCollection("users/mfstuhlmacher/Cuba/ClassBoundaries/Cuba1990_500m"); //1990
//cb = ee.FeatureCollection("users/mfstuhlmacher/Cuba/ClassBoundaries/Cuba1995_500m"); //1995
//cb = ee.FeatureCollection("users/mfstuhlmacher/Cuba/ClassBoundaries/Cuba2000_500m"); //2000
//cb = ee.FeatureCollection("users/mfstuhlmacher/Cuba/ClassBoundaries/Cuba2005_500m"); //2005
//cb = ee.FeatureCollection("users/mfstuhlmacher/Cuba/ClassBoundaries/Cuba2010_500m"); //2010

//Additional months used to create cloudless composites 
var dateRange = ee.DateRange('1984-06-01', '1986-05-31'); //1985
//var dateRange = ee.DateRange('1989-01-01', '1992-06-30'); //1990
//var dateRange = ee.DateRange('1994-06-01', '1996-12-31'); //1995
//var dateRange = ee.DateRange('1999-06-01', '2001-05-31'); //2000
//var dateRange = ee.DateRange('2001-01-01', '2009-12-31'); //2005
//var dateRange = ee.DateRange('2007-01-01', '2013-06-01'); //2010

//---- Create Landsat composite ----//
Map.addLayer(cuba,{},'cuba',false);
var cubaClip = l5.filterDate(dateRange).filterBounds(geometry);

// Compute a Landsat TOA composite and add it to the map.
var cubaImage = ee.Algorithms.Landsat.simpleComposite({
  collection: cubaClip,
  asFloat: true,
  maxDepth: 50
});
Map.addLayer(cubaImage, {bands: ['B3', 'B2', 'B1']}, 'landsat 5',false);

//---- Calc tasseled cap vars ----//
//Code from this documentation: https://developers.google.com/earth-engine/arrays_array_images

// Define an Array of Tasseled Cap coefficients.
// Coefficients for landsat 5 from Crist and Cicone 1984 (https://ieeexplore.ieee.org/document/4157507)
var coefficients = ee.Array([
  [0.3037, 0.2793, 0.4743, 0.5585, 0.5082, 0.1863],
  [-0.2848, -0.2435, -0.5436, 0.7243, 0.0840, -0.1800],
  [0.1509, 0.1973, 0.3279, 0.3406, -0.7112, -0.4572],
  [-0.8242, 0.0849, 0.4392, -0.0580, 0.2012, -0.2768],
  [-0.3280, 0.0549, 0.1075, 0.1855, -0.4357, 0.8085],
  [0.1084, -0.9022, 0.4120, 0.0573, -0.0251, 0.0238]
]);
//L5 last day in orbit was June 5 2013. For 2015 will need to use different L8 TC coefficients

// Select the bands of interest.
var image = cubaImage.select(['B1', 'B2', 'B3', 'B4', 'B5', 'B7']);

// Make an Array Image, with a 1-D Array per pixel.
var arrayImage1D = image.toArray();

// Make an Array Image with a 2-D Array per pixel, 6x1.
var arrayImage2D = arrayImage1D.toArray(1);

// Do a matrix multiplication: 6x6 times 6x1.
var componentsImage = ee.Image(coefficients)
  .matrixMultiply(arrayImage2D)
  // Get rid of the extra dimensions.
  .arrayProject([0])
  .arrayFlatten(
    [['brightness', 'greenness', 'wetness', 'fourth', 'fifth', 'sixth']]);

// Display the first three bands of the result and the input imagery.
var vizParams = {
  bands: ['brightness', 'greenness', 'wetness'],
  min: -0.1, max: [0.5, 0.1, 0.1]
};

//----Add all the variables into one image as bands---//
var enVars = componentsImage.select('brightness').addBands(componentsImage.select('greenness'))
            .addBands(componentsImage.select('wetness')).clip(geometry).toFloat();
Map.addLayer(enVars, vizParams, 'environmental variables', false);

//----Reduce feature collection----//
var cbEnVars = enVars.reduceRegions({
  collection: cb,
  reducer: ee.Reducer.mean(),
  scale: 500,
  crs: enVars.projection(),
  tileScale: 12});
print(cbEnVars.first());

//----Export Environmental Variables----//
Export.table.toDrive({
  collection: cbEnVars,
  description: 'EnvironVars1985', //change year in output name
  fileNamePrefix: 'EnvironVars1985', //to correspond to input imagery
  fileFormat: 'SHP'});